block parser app-syslog-forcepoint_ngfw() {
	channel {
		# set default values for basic Splunk and SC4S metadata fields
    	rewrite {
      		r_set_splunk_dest_default(
        		index("test")
        		sourcetype('forcepoint:ngfw')
        		vendor("forcepoint")
        		product("ngfw")
        		template("t_msg_only")
      		);
    	};

		parser {
			# parse timestamp and host fields
      		regexp-parser(
        		template("${MESSAGE}")
        		prefix(".tmp.")
        		patterns(
					'(?<timestamp>\w{3}\s+\d{1,2}\s+\d+:\d+:\d+)\s+(?<host>[^\.]+\.[^\.]+\.[^\.]+\.[^\s]+).*'
				)
      		);

			#set date field
			date-parser(
        		format('%b  %d %H:%M:%S')
        		template("${.tmp.timestamp}")
      		);
    	};
		
		# set host field
		rewrite {
			set("${.tmp.host}", value("HOST"));
    	};

		# trim header before XML block
		rewrite {
			subst("^[^<]+(.*)", "${1}", value("MESSAGE"), flags("store-matches"));
		};
	};
};

application app-syslog-forcepoint_ngfw[sc4s-syslog] {
	# match for XML type events with a unique string
	filter {
		match("STONEGATE_LOG" value("MESSAGE")) 
	}; 
	parser { app-syslog-forcepoint_ngfw(); };
}; 

